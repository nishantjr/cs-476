fmod NAT-MSET-MIN is
  sorts Nat NatMSet .
  subsort Nat < NatMSet .
  op 0 : -> Nat [ctor] .
  op s : Nat -> Nat [ctor] .
  op _ _ : NatMSet NatMSet -> NatMSet [assoc comm ctor] .
  op _<_ : Nat Nat -> Bool .
  op min : NatMSet -> Nat .
  vars N M : Nat .
  var  S : NatMSet .
  eq 0 < s(N) = true .
  eq s(N) < 0 = false .
  eq s(N) < s(M) = N < M .
  eq min(N N S) = min(N S) .
  ceq min(N M S) = min(N S) if N < M .
  ceq min(N M) = N if N < M .
  eq min(N) = N .

*** Solution
  eq 0 < 0 = false .
  ceq min(N M) = M if not N < M .

*** Unit tests
op unitTest : -> Bool .
eq unitTest = true
  --- Expressions that didn't used to work
  and          0 < 0          == false        --- Reduces to: result Bool: 0 < 0
  and s(s(s(0))) < s(s(s(0))) == false        --- Reduces to: result Bool: 0 < 0

  and min(0 0) == 0
  and min(s(0) s(0)) == s(0)

  --- Did we break things?
  and    s(s(0)) < s(s(s(0))) == true
  and s(s(s(0))) < s(s(0))    == false

  and min(s(0) 0) == 0
  and min(0 s(0)) == 0
  and min(0 s(s(s(0))) s(0)) == 0
.
endfm
